filter(is.na(Fare))
titanic[(which(is.na(titanic$Embarked))), 1]
titanic[(which(is.na(titanic$Embarked))), 1]
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
titanic %>% count(Embarked, sort = TRUE)
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic[(which(is.na(titanic$Embarked))), 1]
titanic %>%
filter(is.na(Fare))
rm(list=ls())
library("tidyverse")
library("caret")
setwd("C:/Users/Utilizador/Desktop/kaggle/Titanic---Survival-Prediction")
set.seed(45613)
# Load data
test <- read.csv('test.csv', stringsAsFactors = FALSE)
train <- read.csv('train.csv', stringsAsFactors = FALSE)
glimpse(train)
summarise(train, Survival = sum(Survived)/nrow(train)*100)
titanic <- full_join(train, test)
glimpse(titanic)
titanicPre <- titanic %>% select(-Ticket, -Name, -Cabin, -Embarked)
pre.proc <- preProcess(titanicPre, method = "bagImpute")
titanicPre <- predict(pre.proc, titanicPre)
titanic$Age <- titanicPre$Age
library(forcats)
titanic <- titanic %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, "No" = "0", "Yes" = "1"))
titanic <- titanic %>%
mutate(Sex = factor(Sex)) %>%
mutate(Sex = fct_recode(Sex, "Female" = "female", "Male" = "male"))
library(stringr)
titanic <- mutate(titanic, Title = str_sub(Name, str_locate(Name, ",")[ , 1] + 2, str_locate(Name, "\\.")[ , 1] - 1))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Title = factor(Title)) %>%
mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = c("Mme", "the Countess"),
"Mr" = c( "Major", "Capt", "Col", "Rev", "Don", "Jonkheer"), "Other" = c("Lady", "Dr", "Sir", "Dona")
))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Family = SibSp + Parch + 1) %>%
mutate(FamilySize = factor(ifelse(Family > 4, "Large", ifelse(Family == 1, "Single", "Small"))))
titanic[1:891,] %>% count(FamilySize, sort = TRUE)
titanic %>%
filter(is.na(Fare))
titanic %>%
filter(is.na(Embarked))
titanic %>% count(Embarked, sort = TRUE)
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic %>%
filter(is.na(Embarked))
titanic[(which(is.na(titanic$Embarked))), 1]
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mfare = median(Fare),n = n())
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
titanic$Embarked[c(62, 830)] <- 'C'
titanic %>% count(Embarked, sort = TRUE)
titanic %>%
filter(is.na(Fare))
titanic <- titanic %>%
mutate(Fare = ifelse(PassengerId == 1044,
median((titanic %>% filter(!is.na(Fare),
Pclass == 3,
PassengerId != 1044))$Fare), Fare))
titanic %>%
filter(is.na(Fare))
apply(sapply(titanic, is.na),2,sum)
titanic <- titanic %>%
mutate(FareGrp = factor(case_when(
between(Fare, 0, 100) ~ "<=100",
Fare > 100 ~ ">100")))
titanic[1:891,] %>% count(FareGrp)
titanic <- titanic %>%
mutate(Pclass = factor(Pclass))
titanic <- titanic %>%
mutate(AgeGrp = factor( case_when(
between(Age, 0, 16) ~ "young",
between(Age, 16, 50) ~ "adult",
Age > 50 ~ "old")))
titanic[1:891,] %>% count(AgeGrp)
train1 <- titanic[1:891,]
test1 <- titanic[892:1309,]
tControl <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 10,
allowParallel = TRUE)
tgControl <- expand.grid(
.mtry = 7,
.splitrule = "gini",
.min.node.size = 10)
model.rf <- train(Survived ~
Sex +
Title +
FamilySize +
FareGrp +
Pclass +
AgeGrp +
Embarked,
data = train1,
trControl = tControl,
metric = "Accuracy",
importance = "impurity",
tuneGrid = tgControl,
num.trees = 2000,
method = "ranger")
model.rf
test1 %>%
cbind(., Survived) -> test.pred
Survived <- predict(fit.rf, test1)
Survived <- as.numeric(as.character(Survived))
Survived <- predict(model.rf, test1)
Survived <- as.numeric(as.character(Survived))
test1 %>%
cbind(., Survived) -> test.pred
test.pred %>%
mutate(Survived = case_when(
is.na(n.fam) ~ Survived,
all.died == 1 & n.fam > 1 & Survived == 1 ~ 0,
TRUE ~ Survived
)
) -> test.pred
Survived <- predict(model.rf, test1)
Survived <- as.numeric(as.character(Survived))
test1 %>%
cbind(., Survived) -> test.pred
pred.rf <- data.frame(
cbind(
PassengerId = as.integer(as.character(test.final$PassengerId)),
Survived = as.integer(as.character(test.pred$Survived))
)
)
pred.rf <- data.frame(
cbind(
PassengerId = as.integer(as.character(test1$PassengerId)),
Survived = as.integer(as.character(test.pred$Survived))
)
)
model.rf
pred.rf
model.rf
Survived <- predict(model.rf, test1)
Survived <- as.numeric(as.character(Survived))
Survived <- predict(model.rf, test1)
test1 %>%
cbind(., Survived) -> test.pred
pred.rf <- data.frame(
cbind(
PassengerId = as.integer(as.character(test1$PassengerId)),
Survived = as.integer(as.character(test.pred$Survived))
)
)
pred.rf
rm(list = ls())
library("tidyverse")
library("caret")
setwd("C:/Users/Utilizador/Desktop/kaggle/Titanic---Survival-Prediction")
set.seed(45613)
test <- read.csv('test.csv', stringsAsFactors = FALSE)
train <- read.csv('train.csv', stringsAsFactors = FALSE)
glimpse(train)
summarise(train, Survival = sum(Survived)/nrow(train)*100)
titanic <- full_join(train, test)
glimpse(titanic)
# Impute missing  Age values in titanic data
titanicPre <- titanic %>% select(-Ticket, -Name, -Cabin, -Embarked)
pre.proc <- preProcess(titanicPre, method = "bagImpute")
titanicPre <- predict(pre.proc, titanicPre)
titanic$Age <- titanicPre$Age
as.tibble(titanic)
glimse(titanic)
glimpse(titanic)
library(forcats)
titanic <- titanic %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, "No" = "0", "Yes" = "1"))
titanic <- titanic %>%
mutate(Sex = factor(Sex)) %>%
mutate(Sex = fct_recode(Sex, "Female" = "female", "Male" = "male"))
library(stringr)
titanic <- mutate(titanic, Title = str_sub(Name, str_locate(Name, ",")[ , 1] + 2, str_locate(Name, "\\.")[ , 1] - 1))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Title = factor(Title)) %>%
mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = c("Mme", "the Countess"),
"Mr" = c( "Major", "Capt", "Col", "Rev", "Don", "Jonkheer"), "Other" = c("Lady", "Dr", "Sir", "Dona")
))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Family = SibSp + Parch + 1) %>%
mutate(FamilySize = factor(ifelse(Family > 4, "Large", ifelse(Family == 1, "Single", "Small"))))
titanic[1:891,] %>% count(FamilySize, sort = TRUE)
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
titanic %>% count(Embarked, sort = TRUE)
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
?median
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare,na.rm = TRUE),n = n())
?summarise
titanic %>%
filter(is.na(Embarked)) %>%
fct_explicit_na(Embarked)
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
?fct_explicit_na
titanic %>% count(Embarked, sort = TRUE)
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare, na.rm = TRUE),n = n())
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n(), na.rm = TRUE)
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n(na.rm =TRUE))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(!is.na(Fare)),n = n())
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
titanic <- titanic %>%
mutate(Embarked = fct_explicit_na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
titanic <- titanic %>%
mutate(Embarked = fct_explicit_na(Embarked, levels = NA))
rm(list = ls())
library("tidyverse")
library("caret")
setwd("C:/Users/Utilizador/Desktop/kaggle/Titanic---Survival-Prediction")
set.seed(45613)
test <- read.csv('test.csv', stringsAsFactors = FALSE)
train <- read.csv('train.csv', stringsAsFactors = FALSE)
glimpse(train)
summarise(train, Survival = sum(Survived)/nrow(train)*100)
titanic <- full_join(train, test)
glimpse(titanic)
titanicPre <- titanic %>% select(-Ticket, -Name, -Cabin, -Embarked)
pre.proc <- preProcess(titanicPre, method = "bagImpute")
titanicPre <- predict(pre.proc, titanicPre)
titanic$Age <- titanicPre$Age
library(forcats)
titanic <- titanic %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, "No" = "0", "Yes" = "1"))
titanic <- titanic %>%
mutate(Sex = factor(Sex)) %>%
mutate(Sex = fct_recode(Sex, "Female" = "female", "Male" = "male"))
library(stringr)
titanic <- mutate(titanic, Title = str_sub(Name, str_locate(Name, ",")[ , 1] + 2, str_locate(Name, "\\.")[ , 1] - 1))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Title = factor(Title)) %>%
mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = c("Mme", "the Countess"),
"Mr" = c( "Major", "Capt", "Col", "Rev", "Don", "Jonkheer"), "Other" = c("Lady", "Dr", "Sir", "Dona")
))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Family = SibSp + Parch + 1) %>%
mutate(FamilySize = factor(ifelse(Family > 4, "Large", ifelse(Family == 1, "Single", "Small"))))
titanic[1:891,] %>% count(FamilySize, sort = TRUE)
titanic %>% count(Embarked, sort = TRUE)
titanic <- titanic %>%
mutate(Embarked = factor(Embarked), )
mutate(Embarked = fct_explicit_na(Embarked))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
mutate(Embarked = fct_explicit_na(Embarked))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked)) %>%
mutate(Embarked = fct_explicit_na(Embarked))
titanic %>% count(Embarked, sort = TRUE)
titanic <- titanic %>%
mutate(Embarked = factor(Embarked)) %>%
mutate(Embarked = fct_explicit_na(Embarked == ""))
titanic %>% count(Embarked, sort = TRUE)
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic <- titanic %>%
mutate(Embarked = factor(Embarked)) %>%
mutate(Embarked = fct_explicit_na(Embarked))
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare),n = n())
titanic %>%
filter(is.na(Embarked))
titanic$Embarked[titanic$Embarked == (missing)] <- NA
titanic$Embarked[titanic$Embarked == (Missing)] <- NA
titanic$Embarked[titanic$Embarked == Missing] <- NA
rm(list = ls())
library("tidyverse")
library("caret")
setwd("C:/Users/Utilizador/Desktop/kaggle/Titanic---Survival-Prediction")
set.seed(45613)
# Load data
test <- read.csv('test.csv', stringsAsFactors = FALSE)
train <- read.csv('train.csv', stringsAsFactors = FALSE)
glimpse(train)
summarise(train, Survival = sum(Survived)/nrow(train)*100)
titanic <- full_join(train, test)
glimpse(titanic)
# Impute missing  Age values in titanic data
titanicPre <- titanic %>% select(-Ticket, -Name, -Cabin, -Embarked)
pre.proc <- preProcess(titanicPre, method = "bagImpute")
titanicPre <- predict(pre.proc, titanicPre)
titanic$Age <- titanicPre$Age
library(forcats)
titanic <- titanic %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, "No" = "0", "Yes" = "1"))
titanic <- titanic %>%
mutate(Sex = factor(Sex)) %>%
mutate(Sex = fct_recode(Sex, "Female" = "female", "Male" = "male"))
library(stringr)
titanic <- mutate(titanic, Title = str_sub(Name, str_locate(Name, ",")[ , 1] + 2, str_locate(Name, "\\.")[ , 1] - 1))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Title = factor(Title)) %>%
mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = c("Mme", "the Countess"),
"Mr" = c( "Major", "Capt", "Col", "Rev", "Don", "Jonkheer"), "Other" = c("Lady", "Dr", "Sir", "Dona")
))
titanic <- titanic %>%
mutate(Family = SibSp + Parch + 1) %>%
mutate(FamilySize = factor(ifelse(Family > 4, "Large", ifelse(Family == 1, "Single", "Small"))))
titanic[1:891,] %>%
count(FamilySize, sort = TRUE)
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic %>%
filter(is.na(Embarked))
titanic %>%
count(Embarked, sort = TRUE)
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare), n = n())
titanic <- titanic %>%
mutate(Embarked = as.character(Embarked))
glimpse(titanic)
titanic %>%
count(Embarked, sort = TRUE)
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare), n = n())
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
mutate(Embarked = fct_recode("C" = "NA" ))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
mutate(Embarked = fct_recode(Embaarked,"C" = "NA" ))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
mutate(Embarked = fct_recode(Embarked,"C" = "NA" ))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
mutate(Embarked = fct_recode(Embarked,"C" = "NA"))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked)) %>%
mutate(Embarked = fct_recode(Embarked,"C" = "NA"))
titanic <- titanic %>%
mutate(Embarked = factor(Embarked)) %>%
mutate(Embarked = fct_collapse(Embarked,"C" = c("C", "NA")))
rm(list=ls())
library("tidyverse")
library("caret")
setwd("C:/Users/Utilizador/Desktop/kaggle/Titanic---Survival-Prediction")
set.seed(45613)
# Load data
test <- read.csv('test.csv', stringsAsFactors = FALSE)
train <- read.csv('train.csv', stringsAsFactors = FALSE)
glimpse(train)
summarise(train, Survival = sum(Survived)/nrow(train)*100)
titanic <- full_join(train, test)
glimpse(titanic)
# Impute missing  Age values in titanic data
titanicPre <- titanic %>% select(-Ticket, -Name, -Cabin, -Embarked)
pre.proc <- preProcess(titanicPre, method = "bagImpute")
titanicPre <- predict(pre.proc, titanicPre)
titanic$Age <- titanicPre$Age
library(forcats)
titanic <- titanic %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, "No" = "0", "Yes" = "1"))
titanic <- titanic %>%
mutate(Sex = factor(Sex)) %>%
mutate(Sex = fct_recode(Sex, "Female" = "female", "Male" = "male"))
library(stringr)
titanic <- mutate(titanic, Title = str_sub(Name, str_locate(Name, ",")[ , 1] + 2, str_locate(Name, "\\.")[ , 1] - 1))
titanic %>% group_by(Title) %>%
summarise(count = n()) %>%
arrange(desc(count))
titanic <- titanic %>%
mutate(Title = factor(Title)) %>%
mutate(Title = fct_collapse(Title, "Miss" = c("Mlle", "Ms"), "Mrs" = c("Mme", "the Countess"),
"Mr" = c( "Major", "Capt", "Col", "Rev", "Don", "Jonkheer"), "Other" = c("Lady", "Dr", "Sir", "Dona")
))
titanic <- titanic %>%
mutate(Family = SibSp + Parch + 1) %>%
mutate(FamilySize = factor(ifelse(Family > 4, "Large", ifelse(Family == 1, "Single", "Small"))))
titanic[1:891,] %>%
count(FamilySize, sort = TRUE)
titanic %>%
count(Embarked, sort = TRUE)
titanic$Embarked[titanic$Embarked == ""] <- NA
titanic %>%
filter(is.na(Embarked))
titanic %>%
group_by(Embarked, Pclass) %>%
filter(Pclass == "1") %>%
summarise(mFare = median(Fare), n = n())
titanic$Embarked[c(62, 830)] <- 'C'
titanic %>%
count(Embarked, sort = TRUE)
titanic <- titanic %>%
mutate(Embarked = factor(Embarked))
str(titanic)
titanic %>%
filter(is.na(Fare))
titanic <- titanic %>%
mutate(Fare = ifelse(PassengerId == 1044,
median(filter(titanic,!is.na(Fare),
Pclass == 3,
PassengerId != 1044)$Fare), Fare))
titanic$Fare[PassengerId != 1044]
titanic$Fare[titanic$PassengerId != 1044]
titanic$Fare[titanic$PassengerId = 1044]
titanic$Fare[titanic$PassengerId == 1044]
titanic <- titanic %>%
mutate(Fare = ifelse(PassengerId == 1044,
median((titanic %>% filter(!is.na(Fare),
Pclass == 3,
PassengerId != 1044))$Fare), Fare))
titanic$Fare[titanic$PassengerId == 1044]
titanic <- titanic %>%
mutate(Fare = ifelse(PassengerId == 1044,
median(filter(titanic,!is.na(Fare),
Pclass == 3,
PassengerId != 1044)$Fare), Fare))
titanic$Fare[titanic$PassengerId == 1044]
titanic <- titanic %>%
mutate(FareGrp = factor(case_when(
between(Fare, 0, 100) ~ "<=100",
Fare > 100 ~ ">100")))
titanic[1:891,] %>% count(FareGrp)
titanic <- titanic %>%
mutate(Pclass = factor(Pclass))
titanic <- titanic %>%
mutate(AgeGrp = factor( case_when(
between(Age, 0, 16) ~ "young",
between(Age, 16, 50) ~ "adult",
Age > 50 ~ "old")))
titanic[1:891,] %>% count(AgeGrp)
apply(sapply(titanic, is.na),2,sum)
